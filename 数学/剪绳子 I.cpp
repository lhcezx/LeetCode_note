class Solution {
public:
    int cuttingRope(int n) {
        int mod = 3;                // 绳子按照长度3分为小段 (数学证明在题解，就是简单的求函数的极大值)
        int a, b;
        if (n <= 3) return n-1;     // 如果绳子长度小于等于3，则直接直接分为1和n-1，因此乘积为n-1
        a = n / 3;                  // 计算绳子可以分为多少个以3为长度的小段 
        b = n % 3;                  // 计算分完小段后剩下的长度是多少
        if (b == 0) return pow(3, a);   //  如果剩下的长度为0，则正好分完整个绳子，乘积结果为3的a次方
        else if (b == 1) return pow(3, a-1) * 4;  //   如果剩下的长度为1，则证明我们有一个3 + 1的子绳子组合 因为 1x3 比 2x2 的乘积要小，因此我们将这个长度为1的子绳子和长度为3的子绳子切分为 2+2，因此存在共a-1的3和一个2x2
        else return pow(3, a) * 2;
    }
};